parameter_summary_data=param_ITCJ,
y_lims=list( c(-4,4), c(-7,7), c(-20,12), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-4,4), c(-7,7), c(-5,5), c(-1,1) ) )
# preliminar ####
rm(list=ls()); gc(); old_par=par()
## packages ####
librerias = c('tidyverse','cmdstanr','posterior','bayesplot','rethinking')
sapply(librerias, require, character.only=T)
# sapply(librerias, install.packages, character.only=T)
## user defined functions ####
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_manuscript'
source( file.path( dir, '1_code', 'udf.R' ) )
# Data load ####
load( file=file.path( dir,'2_data','comparison_data_train.Rdata' ) )
model_nam = "4_3_1_ITCJ_model.stan"
fit = readRDS(
file = file.path(
dir,'3_results','ITCJ_analysis','fit', str_replace(model_nam,'.stan','.RDS')) )
# fit$summary()
# Stationarity, convergence, and mixing ####
# posterior draws
post = as_draws_df( fit )
# names(post)
## true parameters ####
load( file=file.path( dir,'2_data','population_data.Rdata' ) )
load( file=file.path( dir,'2_data','comparison_data_train.Rdata' ) )
param_true = true_parameter(
population_data = population_data,
comparison_data = comparison_data )
param_ITCJ = ITCJ_parameter_recovery(
bayesian_model = fit,
true_parameters = param_true,
par_int = c('bXIc','bXId','sA','TI','TIA') )
param_ITCJ
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-4,4), c(-7,7), c(-5,5), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-3,3), c(-7,7), c(-5,5), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-2,2), c(-7,7), c(-5,5), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-2.5,2.5), c(-7,7), c(-5,5), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-2.5,2.5), c(-6,6), c(-5,5), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-2.5,2.5), c(-5,5), c(-5,5), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-2.5,2.5), c(-5.5,5.5), c(-5,5), c(-1,1) ) )
# preliminar ####
rm(list=ls()); gc(); old_par=par()
## packages ####
librerias = c('tidyverse','cmdstanr','posterior','bayesplot','rethinking')
sapply(librerias, require, character.only=T)
# sapply(librerias, install.packages, character.only=T)
## user defined functions ####
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_manuscript'
source( file.path( dir, '1_code', 'udf.R' ) )
# Data load ####
load( file=file.path( dir,'2_data','comparison_data_train.Rdata' ) )
model_nam = "4_4_1_ITCJ_model.stan"
fit = readRDS(
file = file.path(
dir,'3_results','ITCJ_analysis','fit', str_replace(model_nam,'.stan','.RDS')) )
# fit$summary()
# Stationarity, convergence, and mixing ####
# posterior draws
post = as_draws_df( fit )
# names(post)
## true parameters ####
load( file=file.path( dir,'2_data','population_data.Rdata' ) )
load( file=file.path( dir,'2_data','comparison_data_train.Rdata' ) )
param_true = true_parameter(
population_data = population_data,
comparison_data = comparison_data )
param_ITCJ = ITCJ_parameter_recovery(
bayesian_model = fit,
true_parameters = param_true,
par_int = c('sA','TI','TIA','BJ') )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-2.5,2.5), c(-5.5,5.5), c(-5.5,5.5), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-2.5,2.5), c(-5.5,5.5), c(-5.5,5.5), c(-5,5) ) )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-2.5,2.5), c(-5.5,5.5), c(-5.5,5.5), c(-5.5,5.5) ) )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-2.5,2.5), c(-5.5,5.5), c(-5.5,5.5), c(-5.5,5.5) ) )
# preliminar ####
rm(list=ls()); gc(); old_par=par()
## packages ####
librerias = c('tidyverse','cmdstanr','posterior','bayesplot','rethinking')
sapply(librerias, require, character.only=T)
# sapply(librerias, install.packages, character.only=T)
## user defined functions ####
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_manuscript'
source( file.path( dir, '1_code', 'udf.R' ) )
# Data load ####
load( file=file.path( dir,'2_data','comparison_data_train.Rdata' ) )
model_nam = "4_5_1_ITCJ_model.stan"
fit = readRDS(  file = file.path( dir,'3_results','ITCJ_analysis','fit',
str_replace(model_nam,'.stan','.RDS')) )
# fit$summary()
# Stationarity, convergence, and mixing ####
# posterior draws
post = as_draws_df( fit )
# names(post)
## true parameters ####
load( file=file.path( dir,'2_data','population_data.Rdata' ) )
load( file=file.path( dir,'2_data','comparison_data_train.Rdata' ) )
param_true = true_parameter(
population_data = population_data,
comparison_data = comparison_data )
param_ITCJ = ITCJ_parameter_recovery(
bayesian_model = fit,
true_parameters = param_true,
par_int = c('bXIc','bXId','bZJd','sA','TI','TIA','BJ') )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-2.5,2.5), c(-5.5,5.5), c(-5.5,5.5), c(-5.5,5.5) ) )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-2.5,2), c(-5.5,5.5), c(-5.5,5.5), c(-5.5,5.5) ) )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-2.5,1.5), c(-5.5,5.5), c(-5.5,5.5), c(-5.5,5.5) ) )
parameter_disagnostic_plot(
parameter_summary_data=param_ITCJ,
y_lims=c(3,5,5,6), type='rmse' )
parameter_disagnostic_plot(
parameter_summary_data=param_ITCJ,
y_lims=c(10000,20000,10000,20000), type='ess_bulk' )
parameter_disagnostic_plot(
parameter_summary_data=param_ITCJ,
y_lims=rep(1.1, 4), type='rhat' )
parameter_disagnostic_plot(
parameter_summary_data=param_ITCJ,
y_lims=c(10000,20000,10000,20000), type='ess_bulk' )
# preliminar ####
rm(list=ls()); gc(); old_par=par()
## packages ####
librerias = c('tidyverse','cmdstanr','posterior','bayesplot','rethinking')
sapply(librerias, require, character.only=T)
# sapply(librerias, install.packages, character.only=T)
## user defined functions ####
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_manuscript'
source( file.path( dir, '1_code', 'udf.R' ) )
# Data load ####
load( file=file.path( dir,'2_data','comparison_data_train.Rdata' ) )
model_nam = "4_6_1_ITCJ_model.stan"
fit = readRDS(  file = file.path( dir,'3_results','ITCJ_analysis','fit',
str_replace(model_nam,'.stan','.RDS')) )
# fit$summary()
# Stationarity, convergence, and mixing ####
# posterior draws
post = as_draws_df( fit )
# names(post)
## true parameters ####
load( file=file.path( dir,'2_data','population_data.Rdata' ) )
load( file=file.path( dir,'2_data','comparison_data_train.Rdata' ) )
param_true = true_parameter(
population_data = population_data,
comparison_data = comparison_data )
param_ITCJ = ITCJ_parameter_recovery(
bayesian_model = fit,
true_parameters = param_true,
par_int = c('bXIc','bXId','bZJd','sA','sI','sJ','TI','TIA','BJ') )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-2.5,1.5), c(-5.5,5.5), c(-5.5,5.5), c(-5.5,5.5) ) )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-2.5,2), c(-5.5,5.5), c(-5.5,5.5), c(-5.5,5.5) ) )
parameter_recovery_plot(
parameter_summary_data=param_ITCJ,
y_lims=list( c(-2.5,2), c(-6,6), c(-6,6), c(-6,6) ) )
# preliminar ####
rm(list=ls()); gc(); old_par=par()
## packages ####
librerias = c('tidyverse','BradleyTerry2','brms','bayesplot','posterior','rethinking','loo')
sapply(librerias, require, character.only=T)
# sapply(librerias, install.packages, character.only=T)
## user defined functions ####
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_manuscript'
source( file.path( dir, '1_code', 'udf.R' ) )
# preliminar ####
rm(list=ls()); gc(); old_par=par()
## packages ####
librerias = c('tidyverse','BradleyTerry2','brms','bayesplot','posterior','rethinking','loo')
sapply(librerias, require, character.only=T)
# sapply(librerias, install.packages, character.only=T)
## user defined functions ####
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_manuscript'
source( file.path( dir, '1_code', 'udf.R' ) )
### misfit analysis ####
stimuli_misfit = read.csv( file=file.path( dir,'3_results','CBTL_analysis','fit','3_1_CBTL_stimuli_misfit1.csv' ) )
judges_misfit = read.csv( file=file.path( dir,'3_results','CBTL_analysis','fit','3_1_CBTL_judges_misfit1.csv' ) )
d = model_dframe( observed_data=comparison_data$d_obs,
BTm_object=comparison_fit, type='stimulus' )
idx1 = d$name %in% with(stimuli_misfit, idx[misfit==T])
## first estimation ####
load( file=file.path( dir, '3_results','CBTL_analysis','fit','3_1_CBTL_comparison_fit1.Rdata' ) )
# preliminar ####
rm(list=ls()); gc(); old_par=par()
## packages ####
librerias = c('tidyverse','BradleyTerry2','brms','bayesplot','posterior','rethinking','loo')
sapply(librerias, require, character.only=T)
# sapply(librerias, install.packages, character.only=T)
## user defined functions ####
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_manuscript'
source( file.path( dir, '1_code', 'udf.R' ) )
## first estimation ####
load( file=file.path( dir, '3_results','CBTL_analysis','fit','3_1_CBTL_comparison_fit1.Rdata' ) )
stimuli_trait_comparison_plot(
observed_data=comparison_data$d_obs,
BTm_object=comparison_fit,
true_parameters = param_true,
misfit_index=NULL,
thr = 10,
y_lims = list(c(-35,35), c(-7,7)) )
## first estimation ####
load( file=file.path( dir,'2_data','comparison_data_train.Rdata' ) )
stimuli_trait_comparison_plot(
observed_data=comparison_data$d_obs,
BTm_object=comparison_fit,
true_parameters = param_true,
misfit_index=NULL,
thr = 10,
y_lims = list(c(-35,35), c(-7,7)) )
# preliminar ####
rm(list=ls()); gc(); old_par=par()
## packages ####
librerias = c('tidyverse','BradleyTerry2','brms','bayesplot','posterior','rethinking','loo')
sapply(librerias, require, character.only=T)
# sapply(librerias, install.packages, character.only=T)
## user defined functions ####
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_manuscript'
source( file.path( dir, '1_code', 'udf.R' ) )
# preliminar ####
rm(list=ls()); gc(); old_par=par()
## packages ####
librerias = c('tidyverse','BradleyTerry2','brms','bayesplot','posterior','rethinking','loo')
sapply(librerias, require, character.only=T)
# sapply(librerias, install.packages, character.only=T)
## user defined functions ####
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_manuscript'
source( file.path( dir, '1_code', 'udf.R' ) )
## true parameters ####
load( file=file.path( dir,'2_data','population_data.Rdata' ) )
load( file=file.path( dir,'2_data','comparison_data_train.Rdata' ) )
param_true = true_parameter(
population_data = population_data,
comparison_data = comparison_data )
## first estimation ####
load( file=file.path( dir, '3_results','CBTL_analysis','fit','3_1_CBTL_comparison_fit1.Rdata' ) )
stimuli_trait_comparison_plot(
observed_data=comparison_data$d_obs,
BTm_object=comparison_fit,
true_parameters = param_true,
misfit_index=NULL,
thr = 10,
y_lims = list(c(-35,35), c(-7,7)) )
### misfit analysis ####
stimuli_misfit = read.csv( file=file.path( dir,'3_results','CBTL_analysis','fit','3_1_CBTL_stimuli_misfit1.csv' ) )
judges_misfit = read.csv( file=file.path( dir,'3_results','CBTL_analysis','fit','3_1_CBTL_judges_misfit1.csv' ) )
d = model_dframe( observed_data=comparison_data$d_obs,
BTm_object=comparison_fit, type='stimulus' )
idx1 = d$name %in% with(stimuli_misfit, idx[misfit==T])
d[idx1, ]; d[ with(d, abs(ability) > quantile(abs(ability), 0.95)), ]
stimuli_trait_comparison_plot(
observed_data=comparison_data$d_obs,
BTm_object=comparison_fit,
true_parameters = param_true,
misfit_index = with( stimuli_misfit, paste0('T',idx[misfit==T]) ),
thr = 10,
y_lims = list(c(-35,35), c(-7,7)) )
### miss-identification 2? ####
load( file=file.path( dir,'2_data','comparison_data_train.Rdata' ) )
rm(list='comparison_fit')
load( file=file.path( dir, '3_results','CBTL_analysis','fit','3_1_CBTL_comparison_fit2.Rdata' ) )
stimuli_misfit = read.csv( file=file.path( dir,'3_results','CBTL_analysis','fit','3_1_CBTL_stimuli_misfit1.csv' ) )
judges_misfit = read.csv( file=file.path( dir,'3_results','CBTL_analysis','fit','3_1_CBTL_judges_misfit1.csv' ) )
d = comparison_dframe( observed_data=comparison_data$d_obs )
stimuli = unique_dframe( observed_data=comparison_data$d_obs, type='stimulus' )
d$left_factor = factor( d$left, levels=stimuli$name)
d$right_factor = factor( d$right, levels=stimuli$name)
idx_stimuli = d$left %in% with(stimuli_misfit, idx[misfit==T] ) |
d$right %in% with(stimuli_misfit, idx[misfit==T] )
idx_judges = d$Js %in% with(judges_misfit, idx[misfit==T] )
idx = idx_stimuli | idx_judges
comparison_residuals = residuals_BTm(
observed_data=comparison_data$d_obs[!idx,],
BTm_object=comparison_fit )
stimuli_misfit = misfit_BTm(
residuals_data=comparison_residuals,
by='stimulus', alpha=0.05 )
judges_misfit = misfit_BTm(
residuals_data=comparison_residuals,
by='judge', alpha=0.05)
with(stimuli_misfit, idx[misfit==T]); with(judges_misfit, idx[misfit==T] )
### parameter recovery ####
rm(list='comparison_fit')
comparison_data2 = read.csv( file=file.path( dir,'3_results','CBTL_analysis','fit','3_1_CBTL_comparison_data2.csv' ) )
load( file=file.path( dir, '3_results','CBTL_analysis','fit','3_1_CBTL_comparison_fit2.Rdata' ) )
judge_fit = readRDS( file=file.path( dir, '3_results','CBTL_analysis','fit','3_1_CBTL_judge_fit.RDS' ) )
individual_fit = readRDS( file=file.path( dir, '3_results','CBTL_analysis','fit','3_1_CBTL_individual_fit.RDS' ) )
param_CBTL = CBTL_parameter_recovery(
observed_data = comparison_data2,
stimuli_model = comparison_fit,
individual_model = individual_fit,
judge_model = judge_fit,
true_parameters = param_true,
par_int = c('b_XIc','b_XId','b_ZJd','sd','sigma','r_Is','r_Js') )
parameter_recovery_plot(
parameter_summary_data=param_CBTL,
y_lims=list( c(-4,4), c(-2000,2000), c(-20,12), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_CBTL,
y_lims=list( c(-2.5,4), c(-2000,2000), c(-20,12), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_CBTL,
y_lims=list( c(-2.5,2), c(-2000,2000), c(-20,12), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_CBTL,
y_lims=list( c(-2.5,4), c(-2000,2000), c(-20,12), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_CBTL,
y_lims=list( c(-2.5,4), c(-7,7), c(-20,12), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_CBTL,
y_lims=list( c(-2.5,4), c(-6,6), c(-20,12), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_CBTL,
y_lims=list( c(-2.5,4), c(-6,6), c(-20,6), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_CBTL,
y_lims=list( c(-2.5,4), c(-6,6), c(-20,10), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_CBTL,
y_lims=list( c(-2.5,4), c(-6,6), c(-20,20), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_CBTL,
y_lims=list( c(-2.5,4), c(-6,6), c(-20,10), c(-1,1) ) )
parameter_recovery_plot(
parameter_summary_data=param_CBTL,
y_lims=list( c(-2.5,4), c(-2000,2000), c(-20,12), c(-6,6) ) )
parameter_recovery_plot(
parameter_summary_data=param_CBTL,
y_lims=list( c(-2.5,4), c(-6,6), c(-20,10), c(-6,6) ) )
parameter_recovery_plot(
parameter_summary_data=param_CBTL,
y_lims=list( c(-2.5,3), c(-2000,2000), c(-20,12), c(-6,6) ) )
parameter_recovery_plot(
parameter_summary_data=param_CBTL,
y_lims=list( c(-2.5,3), c(-6,6), c(-20,10), c(-6,6) ) )
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_manuscript'
source( file.path( dir, '1_code', '4_3_2_ITCJ_summaries.R' ) )
source( file.path( dir, '1_code', '4_4_2_ITCJ_summaries.R' ) )
source( file.path( dir, '1_code', '4_5_2_ITCJ_summaries.R' ) )
source( file.path( dir, '1_code', '4_6_2_ITCJ_summaries.R' ) )
# preliminar ####
rm(list=ls()); gc(); old_par=par()
## packages ####
librerias = c('tidyverse','cmdstanr','posterior','bayesplot','rethinking')
sapply(librerias, require, character.only=T)
# sapply(librerias, install.packages, character.only=T)
## user defined functions ####
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_manuscript'
source( file.path( dir, '1_code', 'udf.R' ) )
# Data load ####
load( file=file.path( dir,'2_data','comparison_data_train.Rdata' ) )
model_nam = "4_4_1_ITCJ_model.stan"
fit = readRDS(
file = file.path(
dir,'3_results','ITCJ_analysis','fit', str_replace(model_nam,'.stan','.RDS')) )
# fit$summary()
# posterior draws
post = as_draws_df( fit )
## true parameters ####
load( file=file.path( dir,'2_data','population_data.Rdata' ) )
load( file=file.path( dir,'2_data','comparison_data_train.Rdata' ) )
param_true = true_parameter(
population_data = population_data,
comparison_data = comparison_data )
param_ITCJ = ITCJ_parameter_recovery(
bayesian_model = fit,
true_parameters = param_true,
par_int = c('sA','TI','TIA','BJ') )
parameter_disagnostic_plot(
parameter_summary_data=param_ITCJ,
y_lims=rep(1.1, 4), type='rhat' )
source( file.path( dir, '1_code', '4_4_2_ITCJ_summaries.R' ) )
# preliminar ####
rm(list=ls()); gc(); old_par=par()
## packages ####
# linux: sudo apt-get install -y libmagick++-dev
# R: install.packages('magick')
librerias = c('magick','tidyverse')
sapply(librerias, require, character.only=T)
## dir ####
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_presentation/figures'
# Cropping images ####
## CBTL analysis ####
filenames = list.files( path=file.path(dir, 'CBTL_analysis', 'cropped'), full.names=T)
idx = str_detect(filenames, 'influential')
for( f in filenames[!idx] ){
img = image_read( path=f )
img = image_crop( geometry=geometry_area(width=1830, height=1000, x_off=70, y_off=130),
image=img )
image_write( img, path=f )
}
for( f in filenames[idx] ){
img = image_read( path=f )
img = image_crop( geometry=geometry_area(width=1770, height=1350, x_off=140, y_off=180),
image=img )
image_write( img, path=f )
}
## ITCJ analysis ####
filenames = list.files( path=file.path(dir, 'ITCJ_analysis', 'cropped'), full.names=T)
idx1 = str_detect(filenames, 'influential')
idx2 = str_detect(filenames, '5_ITCJ_model_comparison')
for( f in filenames[!(idx1 | idx2)] ){
img = image_read( path=f )
img = image_crop( geometry=geometry_area(width=1830, height=1000, x_off=70, y_off=130),
image=img )
image_write( img, path=f )
}
filenames = list.files( path=file.path(dir, 'ITCJ_analysis', 'cropped'), full.names=T)
idx2 = str_detect(filenames, '5_ITCJ_model_comparison')
idx3 = str_detect(filenames, 'prior')
idx3
filenames[idx3]
for( f in filenames[idx3] ){
img = image_read( path=f )
img = image_crop( geometry=geometry_area(width=1830, height=1000, x_off=70, y_off=130),
image=img )
image_write( img, path=f )
}
# preliminar ####
rm(list=ls()); gc(); old_par=par()
## packages ####
# linux: sudo apt-get install -y libmagick++-dev
# R: install.packages('magick')
librerias = c('magick','tidyverse')
sapply(librerias, require, character.only=T)
## dir ####
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_presentation/figures'
filenames = list.files( path=file.path(dir, 'ITCJ_analysis', 'cropped'), full.names=T)
idx1 = str_detect(filenames, 'influential')
idx1
idx2 = str_detect(filenames, '5_ITCJ_model_comparison')
idx2
filenames[!(idx1 | idx2)]
for( f in filenames[!(idx1 | idx2)] ){
img = image_read( path=f )
img = image_crop( geometry=geometry_area(width=1830, height=1000, x_off=70, y_off=130),
image=img )
image_write( img, path=f )
}
# preliminar ####
rm(list=ls()); gc(); old_par=par()
## packages ####
# linux: sudo apt-get install -y libmagick++-dev
# R: install.packages('magick')
librerias = c('magick','tidyverse')
sapply(librerias, require, character.only=T)
## dir ####
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_presentation/figures'
# preliminar ####
rm(list=ls()); gc(); old_par=par()
## packages ####
# linux: sudo apt-get install -y libmagick++-dev
# R: install.packages('magick')
librerias = c('magick','tidyverse')
sapply(librerias, require, character.only=T)
## dir ####
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_presentation/figures'
filenames = list.files( path=file.path(dir, 'ITCJ_analysis', 'cropped'), full.names=T)
filenames
idx1 = str_detect(filenames, 'prior')
idx2 = str_detect(filenames, 'posterior')
idx3 = str_detect(filenames, 'influential')
idx4 = str_detect(filenames, '5_ITCJ_model_comparison')
for( f in filenames[idx1] ){
img = image_read( path=f )
img = image_crop( geometry=geometry_area(width=1830, height=1000, x_off=70, y_off=130),
image=img )
image_write( img, path=f )
}
for( f in filenames[idx2] ){
img = image_read( path=f )
img = image_crop( geometry=geometry_area(width=1830, height=1000, x_off=70, y_off=130),
image=img )
image_write( img, path=f )
}
for( f in filenames[idx3] ){
img = image_read( path=f )
img = image_crop( geometry=geometry_area(width=1770, height=1350, x_off=140, y_off=180),
image=img )
image_write( img, path=f )
}
