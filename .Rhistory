win_plot_continuous( d=data_summary[data_summary$XAd==1,],
type='stimuli', y_lim=c(0,1), group='1' )
par(mfrow=c(1,2))
win_plot_continuous( d=data_summary[data_summary$XAd==1,],
type='stimuli', y_lim=c(0,1), group='1' )
win_plot_continuous( d=data_summary[data_summary$XAd==1,],
type='stimuli', y_lim=c(0,1), group='2' )
par(mfrow=c(1,1))
par(mfrow=c(1,2))
win_plot_continuous( d=data_summary[data_summary$XAd==1,],
type='stimuli', y_lim=c(0,1), group='1' )
win_plot_continuous( d=data_summary[data_summary$XAd==2,],
type='stimuli', y_lim=c(0,1), group='2' )
par(mfrow=c(1,1))
png(file=file.path( dir,'3_results','images','png','stimuli_wins_groups.png' ),
width=40, height=15, units='cm', res=100)
par(mfrow=c(1,2))
win_plot_continuous( d=data_summary[data_summary$XAd==1,],
type='stimuli', y_lim=c(0,1), group='1' )
win_plot_continuous( d=data_summary[data_summary$XAd==2,],
type='stimuli', y_lim=c(0,1), group='2' )
par(mfrow=c(1,1))
dev.off()
png(file=file.path( dir,'3_results','images','png','stimuli_wins.png' ),
width=25, height=15, units='cm', res=100)
win_plot_continuous( d=data_summary, type='stimuli', y_lim=c(0,1) )
dev.off()
### win data ####
data_summary = summary_data( observed_data=comparison_data$d_obs, type='individual')
write.csv( data_summary, row.names=F,
file=file.path( dir,'3_results','summaries','individuals_win_summary.csv' ) )
print('Individuals, win summary complete')
data_summary = data_summary[order(data_summary$p, decreasing=T),]
win_plot_groups( d=data_summary, type='individual', y_lim=c(0,1))
# individual wins
png(file=file.path( dir,'3_results','images','png','individual_wins.png' ),
width=25, height=15, units='cm', res=100)
win_plot_groups( d=data_summary, type='individual', y_lim=c(0,1))
dev.off()
par(mfrow=c(1,3))
win_plot_groups( d=data_summary[data_summary$XId==1,],
type='individual', y_lim=c(0,1), group='1' )
win_plot_groups( d=data_summary[data_summary$XId==2,],
type='individual', y_lim=c(0,1), group='2' )
win_plot_groups( d=data_summary[data_summary$XId==3,],
type='individual', y_lim=c(0,1), group='3' )
par(mfrow=c(1,1))
# stimuli wins per group
png(file=file.path( dir,'3_results','images','png','individual_wins_groups.png' ),
width=40, height=15, units='cm', res=100)
par(mfrow=c(1,3))
win_plot_groups( d=data_summary[data_summary$XId==1,],
type='individual', y_lim=c(0,1), group='1' )
win_plot_groups( d=data_summary[data_summary$XId==2,],
type='individual', y_lim=c(0,1), group='2' )
win_plot_groups( d=data_summary[data_summary$XId==3,],
type='individual', y_lim=c(0,1), group='3' )
par(mfrow=c(1,1))
dev.off()
# outcome description ####
## stimuli ####
### win data ####
data_summary = summary_data( observed_data=comparison_data$d_obs, type='stimuli')
write.csv( data_summary, row.names=F,
file=file.path( dir,'3_results','summaries','stimuli_win_summary.csv' ) )
print('Stimuli, win summary complete')
### win plots ####
data_summary = data_summary[order(data_summary$p, decreasing=T),]
# stimuli wins
png(file=file.path( dir,'3_results','images','png','stimuli_wins.png' ),
width=25, height=15, units='cm', res=100)
win_plot_groups( d=data_summary, type='stimuli', y_lim=c(0,1) )
dev.off()
# stimuli wins per group
png(file=file.path( dir,'3_results','images','png','stimuli_wins_groups.png' ),
width=40, height=15, units='cm', res=100)
par(mfrow=c(1,2))
win_plot_groups( d=data_summary[data_summary$XAd==1,],
type='stimuli', y_lim=c(0,1), group='1' )
win_plot_groups( d=data_summary[data_summary$XAd==2,],
type='stimuli', y_lim=c(0,1), group='2' )
par(mfrow=c(1,1))
dev.off()
# stimuli wins vs continuous variable
png(file=file.path( dir,'3_results','images','png','stimuli_winsVSXAc.png' ),
width=25, height=15, units='cm', res=100)
win_plot_continuous( d=data_summary, type='stimuli', y_lim=c(0,1) )
dev.off()
# stimuli wins vs continuous variable per group
png(file=file.path( dir,'3_results','images','png','stimuli_winsVSXAc_groups.png' ),
width=40, height=15, units='cm', res=100)
par(mfrow=c(1,2))
win_plot_continuous( d=data_summary[data_summary$XAd==1,],
type='stimuli', y_lim=c(0,1), group='1' )
win_plot_continuous( d=data_summary[data_summary$XAd==2,],
type='stimuli', y_lim=c(0,1), group='2' )
par(mfrow=c(1,1))
dev.off()
print('Stimuli, data plots complete')
### win data ####
data_summary = summary_data( observed_data=comparison_data$d_obs, type='individual')
write.csv( data_summary, row.names=F,
file=file.path( dir,'3_results','summaries','individuals_win_summary.csv' ) )
print('Individuals, win summary complete')
data_summary = data_summary[order(data_summary$p, decreasing=T),]
png(file=file.path( dir,'3_results','images','png','individual_wins.png' ),
width=25, height=15, units='cm', res=100)
win_plot_groups( d=data_summary, type='individual', y_lim=c(0,1))
dev.off()
# stimuli wins per group
png(file=file.path( dir,'3_results','images','png','individual_wins_groups.png' ),
width=40, height=15, units='cm', res=100)
par(mfrow=c(1,3))
win_plot_groups( d=data_summary[data_summary$XId==1,],
type='individual', y_lim=c(0,1), group='1' )
win_plot_groups( d=data_summary[data_summary$XId==2,],
type='individual', y_lim=c(0,1), group='2' )
win_plot_groups( d=data_summary[data_summary$XId==3,],
type='individual', y_lim=c(0,1), group='3' )
par(mfrow=c(1,1))
dev.off()
win_plot_continuous( d=data_summary, type='individual', y_lim=c(0,1) )
win_plot_continuous( d=data_summary, type='individual', y_lim=c(0,1) )
png(file=file.path( dir,'3_results','images','png','individual_winsVSXIc_wins.png' ),
width=25, height=15, units='cm', res=100)
win_plot_continuous( d=data_summary, type='individual', y_lim=c(0,1) )
dev.off()
par(mfrow=c(1,3))
win_plot_continuous( d=data_summary[data_summary$XId==1,],
type='individual', y_lim=c(0,1), group='1' )
win_plot_continuous( d=data_summary[data_summary$XId==2,],
type='individual', y_lim=c(0,1), group='2' )
win_plot_continuous( d=data_summary[data_summary$XId==3,],
type='individual', y_lim=c(0,1), group='3' )
par(mfrow=c(1,1))
#'
#' @param d summary obtained with summary_data() function
#' @param type of summary, it needs to match with type in summary_data() function
#' @param y_lim y limits for plot
#' @param group names for groups
#'
#' @return plot
#' @export
#'
#' @examples
win_plot_continuous = function( d,
type = 'stimuli',
y_lim = NULL,
x_lim = NULL,
group = NULL ){
# # test
# d = data_summary
# type = 'stimuli'
# y_lim = c(0,1)
# x_lim = NULL
# group = NULL
if( is.null(y_lim) ){
y_lim = with(d, c( min(p_lower), max(p_upper) ) )
}
if( type=='stimuli' ){
main_nam = 'Stimuli win proportions versus XAc'
if( !is.null(group) ){
main_nam = paste0( 'Stimuli win proportions versus XAc, for XAd=', group)
}
x_axis_nam = 'XAc'
if( is.null(x_lim) ){
x_lim = with(d, c( min(XAc), max(XAc) ) )
}
}
if( type=='individual'){
main_nam = 'Individual win proportions versus XIc'
if( !is.null(group) ){
main_nam = paste0( 'Individual win proportions versus XIc, for XId=', group)
}
x_axis_nam = 'XIc'
if( is.null(x_lim) ){
x_lim = with(d, c( min(XIc), max(XIc) ) )
}
}
y_axis_idx = seq( y_lim[1], y_lim[2], by=0.1 )
# plot
with( d,
{
plot( get(x_axis_nam), p, pch=19, col=rgb(0,0,0,0.3),
ylim=y_lim, yaxt='n',
main=main_nam, xlab='', ylab='Win proportion')
axis(2, y_axis_idx, round(y_axis_idx,2), las=2, cex.axis=1)
for( i in 1:nrow(d) ){
lines( x=rep(get(x_axis_nam)[i], 2), y=c(p_lower[i], p_upper[i]), col=rgb(0,0,0,0.3) )
}
abline( h=round(y_axis_idx,2), lty=2, lwd=0.5, col=rgb(0,0,0,0.3))
}
)
}
win_plot_continuous( d=data_summary, type='stimuli', y_lim=c(0,1), xlim=c(-3,3) )
### win data ####
data_summary = summary_data( observed_data=comparison_data$d_obs, type='stimuli')
data_summary = data_summary[order(data_summary$p, decreasing=T),]
win_plot_continuous( d=data_summary, type='stimuli', y_lim=c(0,1), xlim=c(-3,3) )
win_plot_continuous( d=data_summary, type='stimuli', y_lim=c(0,1), x_lim=c(-3,3) )
win_plot_continuous( d=data_summary, type='stimuli', y_lim=c(0,1), x_lim=c(-4,4) )
win_plot_continuous( d=data_summary, type='stimuli', y_lim=c(0,1), x_lim=c(-4,4) )
#'
#' @param d summary obtained with summary_data() function
#' @param type of summary, it needs to match with type in summary_data() function
#' @param y_lim y limits for plot
#' @param group names for groups
#'
#' @return plot
#' @export
#'
#' @examples
win_plot_continuous = function( d,
type = 'stimuli',
y_lim = NULL,
x_lim = NULL,
group = NULL ){
# # test
# d = data_summary
# type = 'stimuli'
# y_lim = c(0,1)
# x_lim = NULL
# group = NULL
if( is.null(y_lim) ){
y_lim = with(d, c( min(p_lower), max(p_upper) ) )
}
if( type=='stimuli' ){
main_nam = 'Stimuli win proportions versus XAc'
if( !is.null(group) ){
main_nam = paste0( 'Stimuli win proportions versus XAc, for XAd=', group)
}
x_axis_nam = 'XAc'
if( is.null(x_lim) ){
x_lim = with(d, c( min(XAc), max(XAc) ) )
}
}
if( type=='individual'){
main_nam = 'Individual win proportions versus XIc'
if( !is.null(group) ){
main_nam = paste0( 'Individual win proportions versus XIc, for XId=', group)
}
x_axis_nam = 'XIc'
if( is.null(x_lim) ){
x_lim = with(d, c( min(XIc), max(XIc) ) )
}
}
y_axis_idx = seq( y_lim[1], y_lim[2], by=0.1 )
# plot
with( d,
{
plot( get(x_axis_nam), p, pch=19, col=rgb(0,0,0,0.3),
ylim=y_lim, xlim=x_lim, yaxt='n',
main=main_nam, xlab='', ylab='Win proportion')
axis(2, y_axis_idx, round(y_axis_idx,2), las=2, cex.axis=1)
for( i in 1:nrow(d) ){
lines( x=rep(get(x_axis_nam)[i], 2), y=c(p_lower[i], p_upper[i]), col=rgb(0,0,0,0.3) )
}
abline( h=round(y_axis_idx,2), lty=2, lwd=0.5, col=rgb(0,0,0,0.3))
}
)
}
win_plot_continuous( d=data_summary, type='stimuli', y_lim=c(0,1), x_lim=c(-4,4) )
win_plot_continuous( d=data_summary, type='stimuli', y_lim=c(0,1), x_lim=c(-3.5,3.5) )
win_plot_continuous( d=data_summary, type='stimuli', y_lim=c(0,1), x_lim=c(-3.1,3.1) )
# stimuli wins vs continuous variable
png(file=file.path( dir,'3_results','images','png','stimuli_winsVSXAc.png' ),
width=25, height=15, units='cm', res=100)
win_plot_continuous( d=data_summary, type='stimuli', y_lim=c(0,1), x_lim=c(-3.1,3.1) )
dev.off()
par(mfrow=c(1,2))
win_plot_continuous( d=data_summary[data_summary$XAd==1,],
type='stimuli', y_lim=c(0,1), x_lim=c(-3.1,3.1), group='1' )
win_plot_continuous( d=data_summary[data_summary$XAd==2,],
type='stimuli', y_lim=c(0,1), x_lim=c(-3.1,3.1), group='2' )
par(mfrow=c(1,1))
# stimuli wins vs continuous variable per group
png(file=file.path( dir,'3_results','images','png','stimuli_winsVSXAc_groups.png' ),
width=40, height=15, units='cm', res=100)
par(mfrow=c(1,2))
win_plot_continuous( d=data_summary[data_summary$XAd==1,],
type='stimuli', y_lim=c(0,1), x_lim=c(-3.1,3.1), group='1' )
win_plot_continuous( d=data_summary[data_summary$XAd==2,],
type='stimuli', y_lim=c(0,1), x_lim=c(-3.1,3.1), group='2' )
par(mfrow=c(1,1))
dev.off()
print('Stimuli, data plots complete')
win_plot_continuous( d=data_summary, type='individual', y_lim=c(0,1), x_lim=c(0,5) )
### win data ####
data_summary = summary_data( observed_data=comparison_data$d_obs, type='individual')
data_summary = data_summary[order(data_summary$p, decreasing=T),]
win_plot_continuous( d=data_summary, type='individual', y_lim=c(0,1), x_lim=c(0,5) )
# individual wins vs continuous variable
png(file=file.path( dir,'3_results','images','png','individual_winsVSXIc_wins.png' ),
width=25, height=15, units='cm', res=100)
win_plot_continuous( d=data_summary, type='individual', y_lim=c(0,1), x_lim=c(0,5) )
dev.off()
par(mfrow=c(1,3))
win_plot_continuous( d=data_summary[data_summary$XId==1,],
type='individual', y_lim=c(0,1), x_lim=c(0,5), group='1' )
win_plot_continuous( d=data_summary[data_summary$XId==2,],
type='individual', y_lim=c(0,1), x_lim=c(0,5), group='2' )
win_plot_continuous( d=data_summary[data_summary$XId==3,],
type='individual', y_lim=c(0,1), x_lim=c(0,5), group='3' )
par(mfrow=c(1,1))
png(file=file.path( dir,'3_results','images','png','individual_winsVSXIc_groups.png' ),
width=40, height=15, units='cm', res=100)
par(mfrow=c(1,3))
win_plot_continuous( d=data_summary[data_summary$XId==1,],
type='individual', y_lim=c(0,1), x_lim=c(0,5), group='1' )
win_plot_continuous( d=data_summary[data_summary$XId==2,],
type='individual', y_lim=c(0,1), x_lim=c(0,5), group='2' )
win_plot_continuous( d=data_summary[data_summary$XId==3,],
type='individual', y_lim=c(0,1), x_lim=c(0,5), group='3' )
par(mfrow=c(1,1))
dev.off()
## Data summaries ####
source( file.path( dir, '1_code', '2_data_summary.R' ) )
# preliminar ####
rm(list=ls())
gc()
old_par = par()
## packages ####
librerias = c('tidyverse','igraph')
sapply(librerias, require, character.only=T)
# sapply(librerias, install.packages, character.only=T)
## user defined functions ####
dir = '/home/josema/Desktop/1. Work/1 research/PhD Antwerp/#thesis/paper3/paper3_manuscript'
source( file.path( dir, '1_code', '1_1_udf.R' ) )
# load data ####
load( file=file.path( dir,'2_data','comparison_data_train.Rdata' ) )
# str(comparison_data)
count_stimuli = comparison_counts(
observed_data = comparison_data$d_obs,
type = 'stimuli'
)
count_stimuli
stimuli = unique_stimuli_idx( obs_data=comparison_data$d_obs )
stimuli = unique_stimuli_idx( observed_data=comparison_data$d_obs )
N_items = max( stimuli$unique_stimuli$stimuli_idx )
adjacency_stimuli = build_adj_matrix(
N_items = N_items,
N_comparisons = nrow(stimuli$indices),
idx1 = stimuli$indices$left_idx,
idx2 = stimuli$indices$right_idx
)
network_stimuli = graph_from_adjacency_matrix(
adjacency_stimuli,
mode = "undirected",
weighted = T
)
degree(network_stimuli, mode='in') # in-degree, number of edges pointing towards vertex
degree(network_stimuli, mode='out') # out-degree, number of edges originating from the vertex
betweenness(network_stimuli) # vertex shortest path (centrality measure)
edge_betweenness(network_stimuli) # edges shortest path (centrality measure)
# plot
png(file=file.path( dir,'3_results','images','png','stimuli_network.png' ),
width=50, height=50, units='cm', res=100)
V(network_stimuli)$size = 0.8
V(network_stimuli)$label.cex = 0.3
V(network_stimuli)$label.degree = 0
E(network_stimuli)$width = E(network_stimuli)$weight-0.8
par(mar=c(0,0,0,0))
plot( network_stimuli, axes=F, asp=0, xlim=c(-1,1), layout=layout_in_circle )
par(mar=old_par$mar)
dev.off()
count_individuals = comparison_counts(
observed_data = comparison_data$d_obs,
type = 'individual'
)
count_individuals
N_items = max( unique( unlist( comparison_data$d_obs[,c('Is1','Is2')] ) ) )
adjacency_individuals = build_adj_matrix(
N_items = N_items,
N_comparisons = nrow(comparison_data$d_obs),
idx1 = comparison_data$d_obs$Is1,
idx2 = comparison_data$d_obs$Is2
)
network_individuals = graph_from_adjacency_matrix(
adjacency_individuals,
mode = "undirected",
weighted = T
)
degree(network_individuals, mode='in') # in-degree, number of edges pointing towards vertex
degree(network_individuals, mode='out') # out-degree, number of edges originating from the vertex
betweenness(network_individuals) # vertex shortest path (centrality measure)
edge_betweenness(network_individuals) # edges shortest path (centrality measure)
# plot
png(file=file.path( dir,'3_results','images','png','individual_network.png' ),
width=10, height=10, units='cm', res=200)
V(network_individuals)$size = 7
V(network_individuals)$label.cex = 0.5
V(network_individuals)$label.degree = 0
E(network_individuals)$width = E(network_individuals)$weight / max(E(network_individuals)$weight)
par(mar=c(0,0,0,0))
plot( network_individuals, axes=F, asp=0, xlim=c(-1,1), layout=layout_in_circle )
par(mar=old_par$mar)
dev.off()
components_individuals = compute_connected_components( adj= adjacency_individuals )
components_individuals
count_judges2individuals = comparison_counts(
observed_data = comparison_data$d_obs,
type = 'judges2individuals'
)
count_judges2individuals
min(count_judges2individuals); max(count_judges2individuals)
rowSums(count_judges2individuals)
incidence_judges2individuals = as.matrix(count_judges2individuals)
network_judges2individuals = graph_from_biadjacency_matrix(
incidence_judges2individuals,
mode = "out",
weighted = T
)
degree(network_judges2individuals, mode='in') # in-degree, number of edges pointing towards vertex
degree(network_judges2individuals, mode='out') # out-degree, number of edges originating from the vertex
betweenness(network_judges2individuals) # vertex shortest path (centrality measure)
edge_betweenness(network_judges2individuals) # edges shortest path (centrality measure)
# plot
png(file=file.path( dir,'3_results','images','png','judges_individuals_network.png' ),
width=40, height=15, units='cm', res=100)
V(network_judges2individuals)$size = 2.5
V(network_judges2individuals)$label.cex = 0.8
V(network_judges2individuals)$label.degree = 0
colrs = c("blue", "red")[ V(network_judges2individuals)$type + 1 ]
V(network_judges2individuals)$color = colrs
E(network_judges2individuals)$width = E(network_judges2individuals)$weight / max(E(network_judges2individuals)$weight)
par(mar=c(0,0,0,0))
plot( network_judges2individuals, axes=F, asp=0, xlim=c(-1.1,1), layout=layout_as_bipartite )
text( x=-1.1, y=-1, 'individuals' )
text( x=-1.1, y=1, 'judges' )
par(mar=old_par$mar)
dev.off()
# all connections
incidence_judges2individuals = data.frame(incidence_judges2individuals)
incidence_judges2individuals[ incidence_judges2individuals$Freq == 0, ]
### win data ####
data_summary = summary_data( observed_data=comparison_data$d_obs, type='stimuli')
write.csv( data_summary, row.names=F,
file=file.path( dir,'3_results','summaries','stimuli_win_summary.csv' ) )
print('Stimuli, win summary complete')
data_summary = data_summary[order(data_summary$p, decreasing=T),]
# stimuli wins
png(file=file.path( dir,'3_results','images','png','stimuli_wins.png' ),
width=25, height=15, units='cm', res=100)
win_plot_groups( d=data_summary, type='stimuli', y_lim=c(0,1) )
dev.off()
# stimuli wins per group
png(file=file.path( dir,'3_results','images','png','stimuli_wins_groups.png' ),
width=40, height=15, units='cm', res=100)
par(mfrow=c(1,2))
win_plot_groups( d=data_summary[data_summary$XAd==1,],
type='stimuli', y_lim=c(0,1), group='1' )
win_plot_groups( d=data_summary[data_summary$XAd==2,],
type='stimuli', y_lim=c(0,1), group='2' )
par(mfrow=c(1,1))
dev.off()
# stimuli wins vs continuous variable
png(file=file.path( dir,'3_results','images','png','stimuli_winsVSXAc.png' ),
width=25, height=15, units='cm', res=100)
win_plot_continuous( d=data_summary, type='stimuli', y_lim=c(0,1), x_lim=c(-3.1,3.1) )
dev.off()
# stimuli wins vs continuous variable per group
png(file=file.path( dir,'3_results','images','png','stimuli_winsVSXAc_groups.png' ),
width=40, height=15, units='cm', res=100)
par(mfrow=c(1,2))
win_plot_continuous( d=data_summary[data_summary$XAd==1,],
type='stimuli', y_lim=c(0,1), x_lim=c(-3.1,3.1), group='1' )
win_plot_continuous( d=data_summary[data_summary$XAd==2,],
type='stimuli', y_lim=c(0,1), x_lim=c(-3.1,3.1), group='2' )
par(mfrow=c(1,1))
dev.off()
print('Stimuli, data plots complete')
### win data ####
data_summary = summary_data( observed_data=comparison_data$d_obs, type='individual')
write.csv( data_summary, row.names=F,
file=file.path( dir,'3_results','summaries','individuals_win_summary.csv' ) )
print('Individuals, win summary complete')
data_summary = data_summary[order(data_summary$p, decreasing=T),]
# individual wins
png(file=file.path( dir,'3_results','images','png','individual_wins.png' ),
width=25, height=15, units='cm', res=100)
win_plot_groups( d=data_summary, type='individual', y_lim=c(0,1))
dev.off()
# individual wins per group
png(file=file.path( dir,'3_results','images','png','individual_wins_groups.png' ),
width=40, height=15, units='cm', res=100)
par(mfrow=c(1,3))
win_plot_groups( d=data_summary[data_summary$XId==1,],
type='individual', y_lim=c(0,1), group='1' )
win_plot_groups( d=data_summary[data_summary$XId==2,],
type='individual', y_lim=c(0,1), group='2' )
win_plot_groups( d=data_summary[data_summary$XId==3,],
type='individual', y_lim=c(0,1), group='3' )
par(mfrow=c(1,1))
dev.off()
# individual wins vs continuous variable
png(file=file.path( dir,'3_results','images','png','individual_winsVSXIc_wins.png' ),
width=25, height=15, units='cm', res=100)
win_plot_continuous( d=data_summary, type='individual', y_lim=c(0,1), x_lim=c(0,5) )
dev.off()
# stimuli wins vs continuous variable per group
png(file=file.path( dir,'3_results','images','png','individual_winsVSXIc_groups.png' ),
width=40, height=15, units='cm', res=100)
par(mfrow=c(1,3))
win_plot_continuous( d=data_summary[data_summary$XId==1,],
type='individual', y_lim=c(0,1), x_lim=c(0,5), group='1' )
win_plot_continuous( d=data_summary[data_summary$XId==2,],
type='individual', y_lim=c(0,1), x_lim=c(0,5), group='2' )
win_plot_continuous( d=data_summary[data_summary$XId==3,],
type='individual', y_lim=c(0,1), x_lim=c(0,5), group='3' )
par(mfrow=c(1,1))
dev.off()
print('Individuals, data plots complete')
